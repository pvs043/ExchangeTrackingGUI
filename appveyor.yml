#---------------------------------#
#      environment configuration  #
#---------------------------------#
version: 1.0.{build}
image: WMF 5

#---------------------------------#
#      install configuration      #
#---------------------------------#
install:
    - ps: |
        Write-Host "Install prerequisites" -ForegroundColor Yellow
        $null = Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force -ErrorAction Stop
        Install-Module -Name PSScriptAnalyzer -Repository PSGallery -Force -ErrorAction Stop
        Install-Module -Name Pester -Repository PSGallery -Force -ErrorAction Stop
        # Validate
        $RequiredModules = 'PSScriptAnalyzer','Pester'
        $InstalledModules = Get-Module -Name $RequiredModules -ListAvailable
        Write-Host "Installed modules:" -ForegroundColor Yellow
        $InstalledModules | ft Name, Version
        if ( ($InstalledModules.count -lt $RequiredModules.Count) -or ($Null -eq $InstalledModules)) {
            throw "Required modules are missing."
        } else {
            Write-Host "All required modules found!" -ForegroundColor Green
        }

#---------------------------------#
#      build configuration        #
#---------------------------------#
build_script:
    - ps: |
        Write-Host "Build project" -ForegroundColor Yellow
        Write-Host "Build version : $env:APPVEYOR_BUILD_VERSION"
        Write-Host "Branch        : $env:APPVEYOR_REPO_BRANCH"
        Write-Host "Repo          : $env:APPVEYOR_REPO_NAME"
        Write-Host "Running Build.ps1..." -ForegroundColor Yellow
        . .\Build.ps1
    - cd ..\Build\ExchangeTrackingGUI
    - mkdir .git
    - git clone https://github.com/PowerShell/DscResource.Tests
    - mkdir "%ProgramFiles%\WindowsPowerShell\Modules\ExchangeTrackingGUI"
    - copy cMDTBuildLab.psm1 "%ProgramFiles%\WindowsPowerShell\Modules\ExchangeTrackingGUI"
    - copy cMDTBuildLab.psd1 "%ProgramFiles%\WindowsPowerShell\Modules\ExchangeTrackingGUI"
    - ps: |
        Import-Module -Name .\DscResource.Tests\TestHelper.psm1 -Force -ErrorAction Stop
        Write-Host "...completed!" -ForegroundColor Green

#---------------------------------#
#      test configuration         #
#---------------------------------#
test_script:
    - ps: |
        Write-Host "Running Test script" -ForegroundColor Yellow
        Invoke-AppveyorTest -CheckoutPath $env:APPVEYOR_BUILD_FOLDER
